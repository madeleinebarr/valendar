:root {
  --seafoam: #7fd4c1;
  --koolaid: #30bfdd;
  --grapefizz: #8690ff;
  --grafite: #acd0f4;
  --peachy: #f7c0bb;
  --ballet: #fbcff3;
  --razzleberry: #c774e8;
  --phoenix: #65323e;
  --lochness: #569874;
  --seafoamtransparent: rgba(127, 212, 193, 0.3);
  --koolaidtransparent: rgba(48, 191, 221, 0.3);
  --grapefizztransparent: rgba(134, 144, 255, 0.1);
  --grafitetransparent: rgba(172, 208, 244, 0.3);
  --peachytransparent: rgba(247, 192, 187, 0.3);
  --ballettransparent: rgba(251, 207, 243, 0.3);
  --radius: 8px;
  --sansserif: "Open Sans", sans-serif;
  --pixel: "VT323", monospace;
}

body {
  font-size: 12px;
  font-family: var(--sansserif);
}

.columnlayout {
  display: grid;
  grid-template-areas: "day schedule mood";
  grid-template-columns: 20% 1fr 20%;
  /* grid-template-columns: 20% 80%; */
}

.day {
  grid-area: day;
}

.schedule {
  grid-area: schedule;
}

.mood {
  grid-area: mood;
}

.datebar {
  border: 2px solid var(--seafoam);
  border-radius: var(--radius);
  padding-left: 20px;
  padding-bottom: 20px;
}

.todaysdate {
  font-size: 25px;
  margin-top: -20px;
}

.todaysweekday {
  font-size: 20px;
}

.progressText {
  font-family: var(--pixel);
  font-size: 15px;
}

.dailyimage {
  border: 2px solid var(--koolaid);
  border-radius: var(--radius);
}

.goalssection {
  border: 2px solid var(--peachy);
  border-radius: var(--radius);
  display: grid;
  grid-template-areas: "daily weekly monthly yearly";
  /* grid-template-areas: "weekly monthly yearly"; */
  grid-template-columns: 3 (1fr);
}

.daily {
  grid-area: daily;
}

.weekly {
  grid-area: weekly;
}

.monthly {
  grid-area: monthly;
}

.yearly {
  grid-area: yearly;
}

.music {
  border: 2px solid var(--lochness);
  border-radius: var(--radius);
}

.moodtrackingsection {
  border: 2px solid var(--razzleberry);
  border-radius: var(--radius);
  height: 600px;
  overflow: scroll;
}

.dailyimage img {
  width: 50%;
  height: auto;
  padding: 10%;
  display: block;
  margin: auto;
}

.progressbar {
  width: 90%;
  background-color: white;
  border: 2px solid var(--grafite);
  border-radius: var(--radius);
}

.progress {
  height: 10px;
  border-radius: var(--radius);
  background: repeating-linear-gradient(
    45deg,
    var(--ballet),
    var(--ballet) 10px,
    var(--peachy) 10px,
    var(--peachy) 20px
  );
}

/* schedule section */

.schedulelayout {
  border: 2px solid var(--grapefizz);
  border-radius: var(--radius);
  display: grid;
  grid-template-columns: 1fr auto;
  /* width: 80%; */
}

/*table calendar*/

.scheduleTable {
  width: 100%;
  /* width: 80%; */
  table-layout: fixed;
}

.schedulelayout table,
th,
td {
  border: 1px solid #e7e7e7;
  border-collapse: collapse;
}

.schedulelayout th {
  font-weight: 400;
}

.row th {
  color: grey;
}

.scheduleTable td {
  height: 25px;
  width: 100px;
}

.scheduledEvent {
  border-left: 3px solid var(--grapefizz);
  border-top-right-radius: 8px;
  border-bottom-right-radius: 8px;
  background-color: var(--grapefizztransparent);
  color: var(--grapefizz);
  height: 80%;
}

.scheduleTable ul {
  margin: 0;
}

.scheduleTable th {
  width: 20px;
}

.scheduleForm input {
  width: 60%;
}

/* .scheduleForm input {
  width: 80%;
}

.scheduleTable td {
  height: 44px;
  width: 110px;
} */

/* this works pretty well*/
/* th {
  width: 10px;
}
.scheduleTable td {
  height: 45px;
  width: 133px;
}

.scheduleForm input {
  width: 80%;
}

.scheduleSlot ul {
  width: 15px;
} */

/* th {
  width: 10px;
}
.scheduleTable td {
  height: 45px;
  width: 133px;
}

.scheduleForm input {
  width: 80%;
}

.scheduleSlot ul {
  width: 15px;
} */

/* .timeLabel {
  margin-top: 0;
} */

/* .scheduleList {
  margin: 0;
} */

/* .scheduleItem {
  border-left: 3px solid var(--grapefizz);
  border-radius: 8px;
  background-color: var(--grapefizztransparent);

  color: var(--grapefizz);
} */

/* this is the bold styling, save it for the time */
/* .scheduledEvent li {
  font-weight: 600;
} */

.scheduledEvent .scheduleItem {
  font-weight: 600;
}

.plan {
  grid-area: plan;
  /* background-color: bisque; */
  /* height: 600px; */
  /* margin-right: auto;
  margin-left: auto;
  margin-top: 0px;
  text-align: center; */
}

.result {
  grid-area: result;
  /* background-color: floralwhite; */
}

.scheduletime {
  float: left;
}

form .schedule {
  float: right;
}

.schedulelayout ul {
  list-style: none;
}

.moodtracker {
  display: grid;
  grid-template-columns: 1fr;
}

/*makes mood options display sideways*/
/*could make text options shorter + display them closer*/
/* .moodTrackerForm {
  display: flex;
  justify-content: center;
} */

.moodTrackerForm {
  height: 77px;
  column-count: 3;
  column-fill: auto;
}

.goalstext {
  margin-top: 100px;
}

.assessmenttext {
  margin-top: 100px;
}

.goalsheading {
  font-family: var(--pixel);
  font-size: 15px;
}
/* 
.weeklygoals,
.monthlygoals,
.yearlygoals {
  height: 200px;
} */

.notes {
  grid-area: notes;
  background-color: antiquewhite;
}

.notestext {
  display: flex;
  justify-content: center;
  height: 150px;
  margin-left: 15px;
}

.centertext {
  text-align: center;
}

/*this is supposed to center the moodtracker but taking it away centered it*/
/* .graphcontainer {
  display: flex;
  justify-content: center;
} */

/* journal input */

#notesinput {
  width: 700px;
  height: 120px;
  border: none;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial,
    sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  margin-top: 15px;
}

#notesinput:focus {
  outline: none;
}

/* start of mood tracker graph*/

/*css variables defined in the root*/

:root {
  --square-size: 15px;
  /* --square-size: 10px; */
  --square-gap: 5px;
  /* --square-gap: 5px; */
  --week-height: calc(var(--square-size) + var(--square-gap));
}

/* we start by naming each area of the graph*/

/* we're going to lay out the three areas of the main graph 
(the days column, the months row, and the squares)
using grid-template-areas, which allows us to define where the different
areas of a grid fall.*/

.graph ul {
  list-style: none;
}

.months {
  grid-area: months;
  display: grid;
  /*this made it horizontal*/
  /* grid-template-columns:
    calc(var(--week-width) * 4) 
    calc(var(--week-width) * 4) 
    calc(var(--week-width) * 4) 
    calc(var(--week-width) * 5) 
    calc(var(--week-width) * 4) 
    calc(var(--week-width) * 4) 
    calc(var(--week-width) * 5) 
    calc(var(--week-width) * 4) 
    calc(var(--week-width) * 4) 
    calc(var(--week-width) * 5) 
    calc(var(--week-width) * 4) 
    calc(var(--week-width) * 5); */

  /* margin-bottom: -15px; */
  grid-template-rows:
    calc(var(--week-height) * 4)
    calc(var(--week-height) * 4)
    calc(var(--week-height) * 4)
    calc(var(--week-height) * 5)
    calc(var(--week-height) * 4)
    calc(var(--week-height) * 4)
    calc(var(--week-height) * 5)
    calc(var(--week-height) * 4)
    calc(var(--week-height) * 4)
    calc(var(--week-height) * 5)
    calc(var(--week-height) * 4)
    calc(var(--week-height) * 5);
}

.days {
  grid-area: days;
  display: grid;
  /* grid-template-rows: repeat(7, var(--square-size)); */
  grid-template-columns: repeat(7, var(--square-size));
  gap: var(--square-gap);
  /* margin-right: -40px; */
  margin-bottom: -10px;
}

.squares {
  grid-area: squares;
  display: grid;
  gap: var(--square-gap);
  /* grid-template-rows: repeat(7, var(--square-size));
  grid-auto-flow: column;
  grid-auto-columns: var(--square-size); */
  grid-template-columns: repeat(7, var(--square-size));
  grid-auto-flow: row;
  grid-auto-rows: var(--square-size);
}

/* using these names, we can write out how we want the areas to be laid out*/
/*the grid-template-areas property accepts space separated strings*/
/* each string represents a row, and within each string we have columns*/

.moodquestion {
  font-family: var(--pixel);
  font-size: 15px;
}

.graph {
  display: inline-grid;
  grid-template-areas:
    "empty days"
    "months squares";
  gap: 10px;
  /* grid-template-columns: auto 1fr; */
  grid-template-columns: 10% 1fr;

  /* grid-template-rows: auto 1fr; */
  padding: 20px;
}

.days li:nth-child(even) {
  visibility: hidden;
}

.squares li {
  background-color: #ebedf0;
}

.squares li[class="amazing"] {
  background-color: var(--peachy);
}

.squares li[class="good"] {
  background-color: var(--ballet);
}

.squares li[class="productive"] {
  background-color: var(--koolaid);
}

.squares li[class="average"] {
  background-color: var(--seafoam);
}

.squares li[class="tired"] {
  background-color: var(--lochness);
}

.squares li[class="blah"] {
  background-color: var(--grafite);
}

.squares li[class="sad"] {
  background-color: var(--grapefizz);
}

.squares li[class="stressful"] {
  background-color: var(--razzleberry);
}

.squares li[class="anxious"] {
  background-color: var(--phoenix);
}

/* if we want a grid area name that doesn't correspond to an actual grid area,
we can essentialy create a phantom element, which is what "empty" is in this case*/

/* we want the first column to only take up as much space as it needs given the content within it,
(meaning the empty + days column)
but we want the second column to fill up the rest of the available space
(meaning the months and squares column)*/

/* here we are making a custom property, --square-size, which 
contains a value that can be used in other declarations with 
var(--square-size). We're setting it in the root element so 
that the property can be accessed throughout the document*/

/* unlike the list of days, the amount of space taken up by 
each month column is not so straightforward. Ideally, we'd
want each month to take up the equivalent of 4 columns to represent 4 weeks.
However, each month doesn't span across exactly 4 even weeks.
This could probably be improved with javascript/relying on real data*/

/* "shopping list" / wish list css */

.goalsForm {
  /* width: 100%; */
  display: grid;
  grid-template-columns: 80%;
  gap: 10px;
  padding: 10px;
}

/* .weekly-goals-list {
  background: white; 
  /* padding: 3rem; */
/* border-radius: 1rem; */

/* width: 300px; */
/* margin: 4rem 0;
} */

.goals-list ul {
  list-style: none;
  margin: 0;
  padding: 10px;
}

.shopping-item {
  padding: 5px 0px;
  /* padding: 1rem 0; */
  /* display: grid; */
  /* grid-template-columns: auto 1fr auto;
  grid-gap: 1rem;
  align-items: center; */
}

.shopping-item input[type="checkbox"] {
  margin-right: 1rem;
}

.shopping-item input[type="checkbox"]:checked + .itemName {
  opacity: 0.5;
}

.shopping-item button {
  /* padding: 0; */
  /* width: 5px; */
  font-size: 1rem;
  cursor: pointer;
  transition: transform 0.2s;
}

/* .shopping-item button:hover {
  transform: scale(1.4);
} */

/* my shopping list css*/

.goalsForm input {
  /* border: none; */
  border: 1px solid var(--grafitetransparent);
}

.goalsForm input:focus {
  outline: none;
  border: 1px solid var(--ballet);
}

.goalsList button {
  border: none;
  float: right;
}

.goalsForm button[type="submit"] {
  background: pink;
  border: 1px solid grey;
}

.goalsForm button[type="submit"]:hover {
  background-color: paleturquoise;
}

.goalsForm button[type="submit"]:focus {
  outline: none;
}

.line {
  width: 90%;
  margin-left: 0;
}

.hidden {
  display: none;
}

/* .hidden {
  background-color: red;
} */

.musicplayer {
  /* padding: 10px; */
  padding-left: 10px;
  padding-right: 10px;
  height: 275px;
  overflow: hidden;
}
